/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quiz.gui;

import dao.PerformanceDAO;
import dao.QuestionDAO;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pojo.Answer;
import pojo.AnswerStore;
import pojo.Exam;
import pojo.Performance;
import pojo.Question;
import pojo.QuestionStore;
import pojo.UserProfile;

/**
 *
 * @author hp
 */
public class TakePaperFrame extends javax.swing.JFrame {

   Color oldColor;
    private Exam exam;
    private QuestionStore qstore;
    private AnswerStore astore;
    private int qno,pos=0;
    public boolean flag;
    
    public TakePaperFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        lblname.setText("Hello "+UserProfile.getUsername());
        qstore=new QuestionStore();
        astore=new AnswerStore();
        qno=1;
        lblqno.setText("Question no:"+qno);
        flag=false;
        SplashThread sp=new SplashThread();
        sp.start();

    }
     public TakePaperFrame(Exam exam){
        this();
        this.exam=exam;
        lblTitle.setText(exam.getLanguage().toUpperCase()+" PAPER");
        loadQuestion();
        showQuestion();
    }

   
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        lblqno = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        btnnext = new javax.swing.JButton();
        btnprevious = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtquestion = new javax.swing.JTextArea();
        rbtn1 = new javax.swing.JRadioButton();
        rbtn2 = new javax.swing.JRadioButton();
        rbtn3 = new javax.swing.JRadioButton();
        rbtn4 = new javax.swing.JRadioButton();
        lblTimer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon("G:\\java core project files\\IMPORTANT PROJECT IMAGES\\good luck2.jpg")); // NOI18N

        lblqno.setBackground(new java.awt.Color(0, 0, 0));
        lblqno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblqno.setForeground(new java.awt.Color(255, 102, 0));
        lblqno.setText("Qno");

        lblname.setBackground(new java.awt.Color(51, 51, 51));
        lblname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblname.setForeground(new java.awt.Color(255, 102, 0));
        lblname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblnameMouseEntered(evt);
            }
        });

        btnnext.setBackground(new java.awt.Color(51, 51, 51));
        btnnext.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnnext.setForeground(new java.awt.Color(255, 102, 0));
        btnnext.setText("Next");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnprevious.setBackground(new java.awt.Color(0, 0, 0));
        btnprevious.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnprevious.setForeground(new java.awt.Color(255, 102, 0));
        btnprevious.setText("previous");
        btnprevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreviousActionPerformed(evt);
            }
        });

        btncancel.setBackground(new java.awt.Color(51, 51, 51));
        btncancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btncancel.setForeground(new java.awt.Color(255, 102, 0));
        btncancel.setText("Cancel");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(51, 51, 51));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 102, 0));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 51, 0));

        txtquestion.setColumns(20);
        txtquestion.setRows(5);
        jScrollPane2.setViewportView(txtquestion);

        buttonGroup1.add(rbtn1);
        rbtn1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtn1.setForeground(new java.awt.Color(255, 102, 0));

        buttonGroup1.add(rbtn2);
        rbtn2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtn2.setForeground(new java.awt.Color(255, 102, 0));

        buttonGroup1.add(rbtn3);
        rbtn3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtn3.setForeground(new java.awt.Color(255, 102, 0));

        buttonGroup1.add(rbtn4);
        rbtn4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rbtn4.setForeground(new java.awt.Color(255, 102, 0));

        lblTimer.setBackground(new java.awt.Color(255, 153, 51));
        lblTimer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTimer.setForeground(new java.awt.Color(255, 51, 51));
        lblTimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblTimerMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnnext)
                    .addComponent(lblqno, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addComponent(btncancel)
                        .addGap(94, 94, 94)
                        .addComponent(btnprevious)
                        .addGap(83, 83, 83)
                        .addComponent(btnDone)
                        .addGap(120, 120, 120))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rbtn3, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                    .addComponent(rbtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rbtn4, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(rbtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblname, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(174, 174, 174)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtn1)
                            .addComponent(rbtn2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtn3)
                            .addComponent(rbtn4))
                        .addGap(125, 125, 125)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnprevious)
                            .addComponent(btnDone)
                            .addComponent(btncancel)
                            .addComponent(btnnext))
                        .addGap(73, 73, 73))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblqno, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(684, 684, 684))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
      String userAnswer=getUserAnswer();
        if(userAnswer!=null){
        Question question=qstore.getQuestionByQno(qno);
        String correctAnswer=question.getCorrectAnswer();
        Answer newanswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,userAnswer,correctAnswer);
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
        astore.addAnswer(newanswer);
        else{
            if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                int apos=astore.removeAnswer(answer);
                 astore.setAnswerAt(apos, newanswer);
            }
        }
        }
        int right=0,wrong=0;
        for(Question question:qstore.getAllQuestions()){
            int qno=question.getQno();
            Answer answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
            {
                String chosenAnswer1=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
                if(chosenAnswer1.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;

            }

        }
        String reportCard="Total Questions:"+qstore.getCount();
        reportCard+="\nRight Answers:"+right;
        reportCard+="\nWrong Answers:"+wrong;
        reportCard+="\nUnAttempted  :"+(qstore.getCount()-(right+wrong));
        JOptionPane.showMessageDialog(null, reportCard,"Your Result!",JOptionPane.INFORMATION_MESSAGE);
         try{
                Performance performance=new Performance(exam.getExamId(),exam.getLanguage(), UserProfile.getUsername(),right,wrong,(qstore.getCount()-(right+wrong)),(double)right/qstore.getCount()*100);
                PerformanceDAO.addperformance(performance);
                JOptionPane.showMessageDialog(null, "Your performance has been successfully added to the database","Performance Added!",JOptionPane.INFORMATION_MESSAGE);
                ChoosePaperFrame paperFrame=new ChoosePaperFrame();
                paperFrame.setVisible(true);
                this.dispose();
             }
          catch(SQLException ex){
                JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
                } 
      flag=true;
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        ChoosePaperFrame paperFrame=new ChoosePaperFrame();
        paperFrame.setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnpreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreviousActionPerformed
   String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
        Question question=qstore.getQuestionByQno(qno);
        String correctAnswer=question.getCorrectAnswer();
        Answer newanswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
        astore.addAnswer(newanswer);
        else{
              if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false){
                 int apos=astore.removeAnswer(answer);
                 astore.setAnswerAt(apos, newanswer);
              }
            }
       }
        pos--;
        if(pos<0)
        {
             pos=qstore.getCount()-1;
        }
        qno--;
         if(qno<=0)
            qno=qstore.getCount();
        lblqno.setText("Question no:"+qno);
        showQuestion();
    
 
    }//GEN-LAST:event_btnpreviousActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
       String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null){
       Question question=qstore.getQuestionByQno(qno);    
        String correctAnswer=question.getCorrectAnswer();
        Answer newanswer=new Answer(exam.getExamId(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
        astore.addAnswer(newanswer);
        else{
             if(newanswer.getChosenAnswer().equals(
             answer.getChosenAnswer())==false){
             int apos=astore.removeAnswer(answer);         
             astore.setAnswerAt(apos, newanswer);
             }
            }
        }
        pos++;
        if(pos>=qstore.getCount())
        {
           pos=0;
        }
        qno++;      
         if(qno>qstore.getCount())
            qno=1;
        lblqno.setText("Question no:"+qno);
        showQuestion();
    }//GEN-LAST:event_btnnextActionPerformed

    private void lblnameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblnameMouseEntered
        lblname.setForeground(Color.blue);
    }//GEN-LAST:event_lblnameMouseEntered

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseEntered

    private void lblTimerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTimerMouseEntered
lblTimer.setForeground(Color.red);        // TODO add your handling code here:
    }//GEN-LAST:event_lblTimerMouseEntered
  
    class SplashThread extends Thread
    {
   public void run(){
            int timet= exam.getTotalQuestions() * 60; // Convert to seconds
            long delay = timet * 1000;
            do
            {

             try{
                 int minutes = timet / 60;
              int seconds = timet % 60;
              lblTimer.setText(minutes+"m :"+seconds+" s");        
              timet = timet - 1;
              delay = delay - 1000;
              Thread.sleep(1000);
             }
             catch(InterruptedException ex){
                 JOptionPane.showMessageDialog(null, "Error in Take Test Frame", "Error", JOptionPane.ERROR_MESSAGE);
                            ex.printStackTrace();
             }

            }while (delay >= 0);  
            if(flag==false)
            {
             btnDone.doClick();          
            }
   }    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakePaperFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakePaperFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakePaperFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakePaperFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakePaperFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnprevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTimer;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblname;
    private javax.swing.JLabel lblqno;
    private javax.swing.JRadioButton rbtn1;
    private javax.swing.JRadioButton rbtn2;
    private javax.swing.JRadioButton rbtn3;
    private javax.swing.JRadioButton rbtn4;
    private javax.swing.JTextArea txtquestion;
    // End of variables declaration//GEN-END:variables

    private void showQuestion() {
   Question question=qstore.getQuestion(pos);

         System.out.println("position is:"+pos);
         System.out.println("question =="+question); 
        buttonGroup1.clearSelection();
        txtquestion.setText(question.getQuestion());
        rbtn1.setText(question.getAnswer1());
        rbtn2.setText(question.getAnswer2());
        rbtn3.setText(question.getAnswer3());
        rbtn4.setText(question.getAnswer4());
        Answer answer=astore.getAnswerByQno(qno);
        if(answer==null)
            return;
        String chosenAnswer=answer.getChosenAnswer();
        switch(chosenAnswer){
            case "Answer1":
                rbtn1.setSelected(true);
                break;
            case "Answer2":
                rbtn2.setSelected(true);
                break;
            case "Answer3":
                rbtn3.setSelected(true);
                break;
            case "Answer4":
                rbtn4.setSelected(true);
                break;
        }
    }

    private void loadQuestion() {
     try
        {
            ArrayList<Question> questionList=QuestionDAO.getQuestionsByExamId(exam.getExamId());
            System.out.println("Arraylist"+questionList);
            for(Question q:questionList)
            {
                qstore.addQuestion(q);
            }
            System.out.println(questionList);
        }
        catch(SQLException ex)
        {
             JOptionPane.showMessageDialog(null,"DB Error","Edit Question Error!",JOptionPane.ERROR_MESSAGE);
             ex.printStackTrace();
        }
    }

    private String getUserAnswer() {
       if(rbtn1.isSelected())
           return "Answer1";
       if(rbtn2.isSelected())
           return "Answer2";
       if(rbtn3.isSelected())
           return "Answer3";
       if(rbtn4.isSelected())
           return "Answer4";
       else
           return null;
//To change body of generated methods, choose Tools | Templates.
    }
}

